{"version":3,"file":"static/js/767.fae18d85.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","movies-api/Api.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import { useLocation, Link } from \"react-router-dom\";\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link state={{ from: location }} to={`/movies/${id}`}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n\n","import axios from \"axios\";\n\nconst API_KEY = 'd44e94394abd272557b89aec1c409472';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  },\n});\n\n// Get the trending movies\nconst fetchTrendingMovies = async () => {\n  const response = await axiosInstance.get(`trending/movie/day`);\n  return response.data.results;\n};\n\n// Get full movie information\nconst fetchMovieDetails = async movieId => {\n  const response = await axiosInstance.get(`/movie/${movieId}`);\n  return response.data;\n};\n\n// Search for movies by their original, translated and alternative titles\nconst fetchSearch = async movieName => {\n  const response = await axiosInstance.get(`/search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\n// Get the cast information\nconst fetchMovieCast = async movieId => {\n  const response = await axiosInstance.get(`movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\n// Get the user reviews for a movie\nconst fetchMovieReviews = async movieId => {\n  const response = await axiosInstance.get(`movie/${movieId}/reviews`);\n  return response.data.results;\n};\n\nexport {\n  fetchTrendingMovies,\n  fetchMovieDetails,\n  fetchSearch,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n    \n","\nimport React, { useState } from 'react';\n\nexport const SearchForm = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    setSearchParams({ query });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Name movie\"\n        autoFocus\n        value={query}\n        onChange={({ target: { value } }) => setQuery(value)}\n        aria-label=\"Search movies\"\n      />\n      <button type=\"submit\" disabled={!query} aria-label=\"Submit search\">\n        Search\n      </button>\n    </form>\n  );\n};\n\n","\n\n\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearch } from 'movies-api/Api';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MoviesPages = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const fetchMovieByQuery = async () => {\n      try {\n        setLoading(true);\n        const currentQuery = searchParams.get('query');\n        if (!currentQuery) {\n          setLoading(false);\n          return;\n        }\n\n        const movieByQuery = await fetchSearch(currentQuery);\n        setMovies(movieByQuery);\n      } catch (error) {\n        console.error(error);\n        setError(error)\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieByQuery();\n  }, [searchParams]);\n\n  return (\n    <>\n      <SearchForm setSearchParams={setSearchParams} />\n      {loading && <Loader />}\n      {error && <p>Something went wrong...</p>}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default MoviesPages;\n\n\n"],"names":["MoviesList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","Link","state","from","to","concat","axiosInstance","axios","baseURL","params","api_key","language","include_adult","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","data","results","stop","apply","arguments","fetchMovieDetails","_callee2","movieId","_context2","_x","fetchSearch","_ref3","_callee3","movieName","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","SearchForm","setSearchParams","_useState","useState","_useState2","_slicedToArray","query","setQuery","_jsxs","onSubmit","event","preventDefault","type","placeholder","autoFocus","value","onChange","target","disabled","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","useEffect","fetchMovieByQuery","currentQuery","movieByQuery","t0","console","finish","_Fragment","Loader","length"],"sourceRoot":""}